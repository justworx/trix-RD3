

#
# test stopiteration
#

# import and create a scanner
from trix.x.scan import *
s = Scanner("Abc 123")

# show that the first character is 'A'
s.char

# show that collecting numeric characters returns '' and
# does not advance the pointer...
s.collect(lambda ci: ci.numeric)
s.char

# show that collecting alpha characters does advance the 
# pointer - it ends up on a ' ' space...
s.collect(lambda ci: ci.alpha)
s.char

# move forward past the space and check the next character
s.cc
s.char

# now collect the numeric characters (starting on the 
# current character '1'...
s.collect(lambda ci: ci.numeric)

# show that since we've reached the end of data, calling
# self.char (or in fact any methond) raises an exception.
s.char


#
# Test ignore
#

# import and create a scanner
from trix.x.scan import *
s = Scanner("Abc 123")

# show that ignore will move past specified characters and will
# leave the pointer on the next ' ' space.
s.ignore(lambda ci: ci.alpha)
s.char

# show that ignoreing spaces leaves the pointer on the '1'
s.ignore(lambda ci: ci.space)
s.char

# show that ignoreing all the characters to the end does NOT
# cause StopIteration...
s.ignore(lambda ci: ci.numeric)

# ...but that requesting the next character DOES!
s.char




#
# Test scanbidi
#

from trix.x.scan import *
s = Scanner("['Abc', '123']")
